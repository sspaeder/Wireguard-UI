<Window x:Class="WireGuard.GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WireGuard.GUI"
        xmlns:vm="clr-namespace:WireGuard.GUI.ViewModels"
        xmlns:conv="clr-namespace:WireGuard.GUI.Converter"
        xmlns:ap="clr-namespace:WireGuard.GUI.AttachedProperties"
        xmlns:fa5="http://schemas.fontawesome.com/icons/"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
        Title="WireguardUI Client" Height="400" Width="500" MinHeight="400" MinWidth="500">
    <Window.Resources>
        <!-- Converter -->
        <conv:BoolToVisibilityConverter x:Key="BoolToVisConverter" />
        <conv:BoolToIcoConverter x:Key="BoolToIcoConv" />
        <conv:UserSettingToVisibilityConverter x:Key="USVConverter" />
        <conv:LogLevelToVisibilityConverter x:Key="LL2Vconverter" />
        <local:ObjectToBoolConverter x:Key="ObjToBoolConvert" />

        <!-- Window element styles -->
        <Style TargetType="MenuItem" x:Key="Con_Discon">
            <Setter Property="Header" Value="{DynamicResource LBL_CM_DISCON}" />
            <Setter Property="Command" Value="{Binding RunningConfig.StartStopCmd}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RunningConfig}" Value="{x:Null}">
                    <Setter Property="Header" Value="{DynamicResource LBL_CM_CON}" />
                    <Setter Property="Command" Value="{Binding Selected.StartStopCmd}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Selected}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Objects -->
        <ContextMenu x:Key="tbMenue">
            <MenuItem Style="{StaticResource Con_Discon}"/>
            <Separator />
            <MenuItem Header="{DynamicResource LBL_CM_CLOSE}" 
                      Command="{Binding CloseCmd}"/>
        </ContextMenu>

    </Window.Resources>
    <Grid>
        <!-- Mainscreen -->
        <Grid Visibility="{Binding Settings.RunInKioskMode, Converter={StaticResource BoolToVisConverter}, ConverterParameter=true}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="40px"/>
                <RowDefinition />
                <RowDefinition Height="20px"/>
            </Grid.RowDefinitions>

            <tb:TaskbarIcon x:Name="myNotifyIcon"
                            Visibility="Visible"
                            ToolTipText="Wireguard GUI"
                            ContextMenu="{DynamicResource tbMenue}"
                            IconSource="{Binding IsRunning, Converter={StaticResource BoolToIcoConv}}"
                            DoubleClickCommand="{Binding ShowWindowCmd}"
                            >
            </tb:TaskbarIcon>

            <!-- Gid Row 0-->
            <Grid Grid.Row="0" Margin="5" Height="25" VerticalAlignment="Bottom">
                <Grid.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={x:Static RelativeSource.Self}}" />
                    </Style>
                </Grid.Resources>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button ToolTip="{DynamicResource BTN_ADD_CONFIG}"
                            Command="{Binding AddConfigCmd}">
                        <Button.Content>
                            <fa5:ImageAwesome Icon="Solid_Plus" Margin="2" Foreground="Green"/>
                        </Button.Content>
                    </Button>
                    <Button Margin="10 0 0 0" 
                            ToolTip="{DynamicResource BTN_REMOVE_CONFIG}"
                            Command="{Binding RemoveConfigCmd}">
                        <Button.Content>
                            <fa5:ImageAwesome Icon="Solid_Minus" Margin="2" Foreground="Red" />
                        </Button.Content>
                    </Button>
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" ToolTip="{DynamicResource BTN_SETTINGS}">
                    <Button Command="{Binding Log.ShowWindow}"
                            ToolTip="{DynamicResource TT_LOG_WIN}"
                            Margin="5,0">
                        <Button.Content>
                            <fa5:ImageAwesome Icon="Solid_Microscope" Margin="2" />
                        </Button.Content>
                    </Button>

                    <Button Command="{Binding ShowSettings}"
                            Visibility="{Binding Settings.UserAvailableSettings, Converter={StaticResource USVConverter}}">
                        <Button.Content>
                            <fa5:ImageAwesome Icon="Solid_Cog" Margin="2" />
                        </Button.Content>
                    </Button>
                </StackPanel>

            </Grid>

            <!-- Gid Row 1-->
            <Grid Grid.Row="1" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6*"/>
                    <ColumnDefinition Width="8*"/>
                </Grid.ColumnDefinitions>

                <!-- Grid Column 0 -->
                <ListBox Grid.Column="0" 
                         Margin="0,2,2,2" 
                         ItemsSource="{Binding Collection.Configs}" 
                         SelectedItem="{Binding Selected}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DisplayName}" 
                                       FontWeight="DemiBold"
                                       FontSize="14"
                                       Padding="5"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                </ListBox>

                <TextBlock Text="{DynamicResource INFO_NO_CONFIG}"
                           FontSize="14"
                           Padding="5"
                           FontWeight="DemiBold">
                    <TextBlock.Resources>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Collection.HasElements}" Value="true">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Resources>
                </TextBlock>

                <!-- Grid Column 1 -->
                <Grid Grid.Column="1" Margin="2" Visibility="{Binding Collection.HasElements, Converter={StaticResource BoolToVisConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="42px"/>
                        <RowDefinition Height="5*"/>
                    </Grid.RowDefinitions>

                    <!-- Grid Row 0 -->
                    <Button Style="{StaticResource StartStopButton}" 
                            IsEnabled="{Binding Selected, Converter={StaticResource ObjToBoolConvert}}"
                            HorizontalAlignment="Left"
                            Height="30px"
                            Width="120px"
                            Command="{Binding Selected.StartStopCmd}">
                    </Button>

                    <!-- Grid Row 1 -->
                    <GroupBox Grid.Row="1">
                        <GroupBox.Header>
                            <TextBlock Text="{DynamicResource TI_HEADER_STAT}" />
                        </GroupBox.Header>
                        <Grid Margin="2">
                            <TextBlock Text="{DynamicResource LBL_STATS_DEACT}"
                                           TextWrapping="WrapWithOverflow">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Settings.TimerInterval}" Value="0">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <Grid>
                                <Grid.Resources>
                                    <Style x:Key="ValueTB" TargetType="TextBlock">
                                        <Setter Property="Margin" Value="5 0 0 0" />
                                    </Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Settings.TimerInterval}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Column="0" Grid.Row="0" Text="Public Key"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Style="{StaticResource ValueTB}" Text="{Binding Selected.Statistics.PublicKey, FallbackValue=KEY}" />

                                <TextBlock Grid.Column="0" Grid.Row="1" Text="Listening Port"/>
                                <TextBlock Grid.Column="1" Grid.Row="1" Style="{StaticResource ValueTB}" Text="{Binding Selected.Statistics.ListeningPort, FallbackValue=PORT}" />

                                <TextBlock Grid.Column="0" Grid.Row="2" Text="Peer"/>
                                <TextBlock Grid.Column="1" Grid.Row="2" Style="{StaticResource ValueTB}" Text="{Binding Selected.Statistics.Peer, FallbackValue=PEER}" />

                                <TextBlock Grid.Column="0" Grid.Row="3" Text="Endpoint"/>
                                <TextBlock Grid.Column="1" Grid.Row="3" Style="{StaticResource ValueTB}" Text="{Binding Selected.Statistics.Endpoint, FallbackValue=ENDPOINT}" />

                                <TextBlock Grid.Column="0" Grid.Row="4" Text="Allowed IPs"/>
                                <TextBlock Grid.Column="1" Grid.Row="4" Style="{StaticResource ValueTB}" Text="{Binding Selected.Statistics.AllowedIPs, FallbackValue=IPS}" />

                                <TextBlock Grid.Column="0" Grid.Row="5" Text="Latest Handshake"/>
                                <TextBlock Grid.Column="1" Grid.Row="5" Style="{StaticResource ValueTB}" Text="{Binding Selected.Statistics.LatestHandshake, FallbackValue=HANDSHAKE}" />

                                <TextBlock Grid.Column="0" Grid.Row="6" Text="Transfer"/>
                                <TextBlock Grid.Column="1" Grid.Row="6" Style="{StaticResource ValueTB}" Text="{Binding Selected.Statistics.Transfer, FallbackValue=TRANSFER}" />

                            </Grid>
                        </Grid>
                    </GroupBox>
                </Grid>
            </Grid>

            <!-- Gid Row 2-->
            <StatusBar Grid.Row="2">
                <StatusBarItem HorizontalAlignment="Left">
                    <TextBlock Text="{Binding Version}"/>
                </StatusBarItem>
                <StatusBarItem HorizontalAlignment="Center"
                               Visibility="{Binding Settings.LogLevel, Converter={StaticResource LL2Vconverter}}">
                    <StackPanel Orientation="Horizontal">
                        <fa5:ImageAwesome Icon="Solid_Bug" />
                    </StackPanel>
                </StatusBarItem>
            </StatusBar>
        </Grid>

        <!-- Kioskmode -->
        <Grid Visibility="{Binding Settings.RunInKioskMode, Converter={StaticResource BoolToVisConverter}}"
              d:IsHidden="True">
            <Button Style="{StaticResource StartStopButton}" 
                    Command="{Binding Selected.StartStopCmd}"
                    Width="125"
                    Height="50"/>
        </Grid>

        <!-- Loading/Error "Screen" -->
        <Grid 
              Background="#9A000000" 
              Visibility="{Binding IsConnecting, Converter={StaticResource BoolToVisConverter}}"
              d:IsHidden="True">
            <Grid.Resources>
                <Style TargetType="fa5:ImageAwesome">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsConnecting}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="spinning">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetProperty="(fa5:ImageAwesome.RenderTransform).(RotateTransform.Angle)"
                                            RepeatBehavior="Forever"
                                            From="0" 
                                            To="360" 
                                            Duration="0:0:1.400" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="spinning" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Border VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    BorderThickness="1"
                    BorderBrush="Black"
                    CornerRadius="5"
                    Padding="5"
                    Background="White">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="2" 
                                      ShadowDepth="4"
                                      Opacity="0.5"/>
                </Border.Effect>
                <StackPanel Orientation="Horizontal">
                    <fa5:ImageAwesome Icon="Solid_Spinner"
                                      Height="25"
                                      Foreground="Blue"
                                      RenderTransformOrigin=".5 .5">
                        <fa5:ImageAwesome.RenderTransform>
                            <RotateTransform x:Name="noFreeze" />
                        </fa5:ImageAwesome.RenderTransform>
                    </fa5:ImageAwesome>
                    <TextBlock Margin="5 0 0 0"
                               Text="{DynamicResource LBL_CONNECTING}"
                               VerticalAlignment="Center"
                               FontSize="20"
                               />
                </StackPanel>
            </Border>
        </Grid>
    </Grid>
</Window>
